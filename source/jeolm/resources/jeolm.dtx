% \iffalse
%
%<package>\NeedsTeXFormat{LaTeX2e}[2009/09/24]
%<*gobble>
\ProvidesFile{jeolm.dtx}
%</gobble>
%<package>\ProvidesPackage{jeolm}
%
% \fi
%
% \GetFileInfo{jeolm.sty}
%
% \title{The \textsf{jeolm} package}
%
% \author{July Tikhonov \\ \texttt{july.tikh@gmail.com}}
%
% \maketitle
%
% \DoNotIndex{\let,\def,\edef}
% \DoNotIndex{\fi,\par}
% \DoNotIndex{\DeclareOption,\ProcessOptions,\RequirePackage}
%
% \section{Introduction}
%
% This \textsf{jeolm} package provides the set of supplementary routines for
% a course-like project consisting of many small pieces, that are distributed
% to course listeners over time.
%
% \section{Usage}
%
% \subsection{Swap Greek variants}
%
% Command |\swapvar| allos one to exchange variant and normal greek letters.
% For example, |\swapvar{kappa}| will exchange |\kappa| and |\varkappa|,
% and |\swapvar[up]{phi}| will exchange |\upphi| and |\upvarphi|.
%
% \subsection{Figures}
%
% \DescribeMacro{\jeolmfigure}
% Macro |\jeolmfiguremap|\marg{alias}\marg{realname} will set a map from its
% first argument to the second.
% Macro
% |\jeolmfigure|\oarg{graphics options}\marg{alias} will use this map to
% determine actual figure name and delegate to
% |\includegraphics|\oarg{graphics options}\marg{realname}.
% These macros do not make much sense outside of automated build system, which
% requires ability to <<relocate>> figure files.
%
% \subsection{Problem numbering}
%
% \DescribeMacro{\problem}
% The basic macro for problem numbering is
% |\problem|.
% It will step the counter and format it, including a space before following text:
% \problem For |\problem|.
%
% \DescribeMacro{\problemx}
% Marking a problem (e.~g. as hard) should be done with the
% |\problemx|\marg{mark} macro:
% \\
% \problemx{*}
% For |\problemx{*}|.
% \qquad
% \problemx{$^\circ$}
% For |\problemx{$^\circ$}|.
%
% \DescribeMacro{\resetproblem}
% Macro |\resetproblem| will restart problem numeration, and
% |\setproblem|\marg{value} will make next problem number be
% $\text{\meta{value}}+1$.
%
% \DescribeMacro{\problemy}
% Sometimes auto-numbering is not needed.
% Macro |\problemy|\marg{problem number} will use supplied argument instead of
% a counter.
% Argument does not need to be a number, for example:
% \\
% \problemy{2.3}
% For |\problemy{2.3}|, mentioning next problem:
% \ref{a problem} for |\ref{a problem}|.
% \qquad
% \problemyx{2a}{**}\label{a problem}\relax
% For |\problemyx{2a}{**}\label{a problem}|.
% \\
% Macro |\problemyx|\marg{problem number}\marg{mark} combines features of
% |\problemy| and |\problemx|.
%
% \DescribeMacro{\subproblem}
% To indicate sub-problems, macro
% |\subproblem| is used, with
% |\subproblemx|\marg{mark} counterpart:
% \\
% \problem
% \subproblem
% for |\subproblem|;
% \quad
% \subproblemx{*}
% for |\subproblemx{*}|.
% \\
% \subproblemy{m}\label{a subproblem}\relax
% for |\subproblemy{m}\label{a subproblem}|
% \\
% \subproblemyx{n}{*}
% for |\subproblemyx{n}{*}|.
% \\
% Mentioning previous subproblem: \ref{a subproblem} for |\ref{a subproblem}|.
% \\
% Macros |\sp| and |\spx| are corresponding |\let| aliases for |\subproblem|
% and |\subproblemx|.
%
% \DescribeEnv{problems}
% The |problems| environment utilises |list|, inserting problem numbers in list
% labels.
% So, the |\item|'s inside |problems| combine |\problem| numbering and
% formatting with usual list environments formatting behavior.
% Macros |\itemx|, |\itemy| and |\itemyx| are also provided.
% Nothing prevents one from using normal |\problem| command inside |problems|
% environment~--- it will not make use of list formatting.
% \begin{problems}
% \item
% For |\item|.
% \item\label{some problem}\relax
% For |\item\label{some problem}|.
% \item
% Mentioning previous problem: \ref{some problem} for |\ref{some problem}|.
% \itemx{*}
% For |\itemx{*}|.
% \itemy{21}
% For |\itemy{21}|.
% \qquad
% \problem
% For |\problem|.
% \itemy{2.1}
% For |\itemy{2.1}|, mentioning next problem:
% \ref{another problem} for |\ref{another problem}|.
% \itemyx{2.2}{*}\label{another problem}\relax
% For |\itemyx{2.2}{*}\label{another problem}|.
% \end{problems}
%
% \subsection{Statements}
%
% Other than problems, structural elements include
% |\definition|, |\theorem|, |\lemma|, and |\statement|.
%
% The basic command is |\claim|\marg{caption}.
%
% \theorem
% For |\theorem|.
%
% \theoremof{ван Обеля}
% For |\theoremof{ван Обеля}|.
%
% \claim{Лемма Фату}
% For |\claim{Лемма Фату}|.
%
% Note that the dot at the end of the caption is generated by the macro.
% These commands should be used outside of |problems| environment.
% This way they will outstand from the problem list.
%
% \StopEventually{}
%
% \section{Implementation}
%
%    \begin{macrocode}
%<*package>
%    \end{macrocode}
%
%    \begin{macrocode}
\RequirePackage{amsmath}
\RequirePackage{amssymb}
%    \end{macrocode}
%
% \subsection{Some definitions}
%
% Infamous Russian <<divided by>> relation.
%    \begin{macrocode}
\newlength\@kratno@height
\newcommand\@kratno@template[2]{\setlength{\@kratno@height}{#2pt}%
\mathrel{%
    \rlap{\raisebox{-0.25\@kratno@height}{$\mathsurround=0pt#1\cdot$}}%
    \rlap{\raisebox{ 0.00\@kratno@height}{$\mathsurround=0pt#1\cdot$}}%
          \raisebox{ 0.25\@kratno@height}{$\mathsurround=0pt#1\cdot$}%
    }}
\newcommand\kratno{\mathchoice%
    {\@kratno@template{\displaystyle}{\tf@size}}%
    {\@kratno@template{\textstyle}{\tf@size}}%
    {\@kratno@template{\scriptstyle}{\sf@size}}%
    {\@kratno@template{\scriptscriptstyle}{\ssf@size}}%
}
%    \end{macrocode}
%
% Allow exchanging greek letters with their variants.
%    \begin{macrocode}
\newcommand\swapvar[2][]{\begingroup
\expandafter\let\expandafter\swap\csname #1#2\endcsname
\expandafter\let\expandafter\varswap\csname #1var#2\endcsname
\global\expandafter\let\csname #1#2\endcsname\varswap
\global\expandafter\let\csname #1var#2\endcsname\swap
\endgroup}
%    \end{macrocode}
%
% This macro will work only on the second run, when the label is substituted.
% Watch out for build cycles!
%    \begin{macrocode}
\def\iflabelundefined#1{\expandafter\ifx\csname r@#1\endcsname\relax}
%    \end{macrocode}
%
% \subsubsection{Centering-overlap}
%
% Provide |\clap| complement to the |\rlap| and |\llap| commands.
%
% For comparison, the existing overlap macros:
%    \begin{verbatim}
% \def\llap#1{\hbox to 0pt{\hss#1}}
% \def\rlap#1{\hbox to 0pt{#1\hss}}
%    \end{verbatim}
%
% \begin{macro}{\clap}
% Define |\clap| similarly.
%    \begin{macrocode}
\def\clap#1{\hbox to 0pt{\hss#1\hss}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\mathllap}
% \begin{macro}{\mathrlap}
% \begin{macro}{\mathclap}
% Define |\clap|, |\rlap| and |\llap| equivalents for math mode (not
% that they didn't work before).
%    \begin{macrocode}
\def\mathllap{\mathpalette\mathllapinternal}
\def\mathrlap{\mathpalette\mathrlapinternal}
\def\mathclap{\mathpalette\mathclapinternal}
\def\mathllapinternal#1#2{%
    \llap{$\mathsurround=0pt#1{#2}$}}
\def\mathrlapinternal#1#2{%
    \rlap{$\mathsurround=0pt#1{#2}$}}
\def\mathclapinternal#1#2{%
    \clap{$\mathsurround=0pt#1{#2}$}}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \subsection{Package options}
%
% No options present.
%    \begin{macrocode}
\ProcessOptions
%    \end{macrocode}
%
% \subsection{Figures}
%
% \begin{macro}{\jeolmfiguremap}
% \begin{macro}{\jeolmfigure}
% Use the |\csname| to create a macro.
% The set of such macros will define a mapping.
%    \begin{macrocode}
\newcommand\jeolmfiguremap[2]{%
\expandafter\def\csname jeolmfiguremap@#1\endcsname{#2}}
\newcommand\jeolmfigure[2][]{%
\includegraphics[#1]{\csname jeolmfiguremap@#2\endcsname}}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \subsection{Labels}
%
% \begin{macro}{\jeolmlabel}
% \begin{macro}{\jeolmref}
% \begin{environment}{jeolmlabelspace}
% Redirect labels, allowing multiple inclusion of source files (provided that
% these files use |\jeolmlabel| and |\jeolmref| instead of normal commands).
%    \begin{macrocode}
\newcommand\jeolmlabel[1]{\label{#1}}
\newcommand\jeolmref[1]{\ref{#1}}
\newenvironment{jeolmlabelspace}[1]{%
    \renewcommand\jeolmlabel[1]{\label{#1:##1}}%
    \renewcommand\jeolmref[1]{\ref{#1:##1}}%
}{}
%    \end{macrocode}
% \end{environment}
% \end{macro}
% \end{macro}
%
% \subsection{Headers}
%
% \begin{macro}{\jeolmheader}
% Macro |\jeolmheader| is used by jeolm driver.
% If redefined, it must stay a macro without arguments.
%    \begin{macrocode}
\newcommand\jeolmheader{%
    \par\begingroup\small\sffamily%
        \leavevmode\null\hfill%
            {\bfseries\jeolminstitution}%
        \hfill\null\\\null\hfill%
            {\itshape\jeolmdaterange}%
        \qquad
            {\jeolmgroup}%
        \ifx\jeolmdate\relax\else\qquad%
            {\itshape\jeolmdate}%
        \fi%
        \hfill\null\\\rule[1ex]{\textwidth}{0.5pt}\linebreak[0]%
    \endgroup%
    \@nobreaktrue
}
\newcommand\jeolminstitution{Wherever}
\newcommand\jeolmgroup{Whatever}
\newcommand\jeolmdaterange{Whenever}
\let\jeolmdate\relax
%    \end{macrocode}
% \end{macro}
%
% \subsection{Problem numbering}
%
% \subsubsection{Public definitions}
%
% \begin{macro}{\problem}
% These macros boil down to |\problem@yx|, which is defined later.
%    \begin{macrocode}
\newcommand\problem{\problemx{}}
\newcommand\problemx[1]{\stepcounter{jeolmproblem}%
    \problemyx{\problem@numbering{jeolmproblem}}{#1}}
\newcommand\problemy[1]{\problemyx{#1}{}}
\newcommand\problemyx[2]{\problem@yx{#1}{#2}\problem@space}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\subproblem}
% \begin{macro}{\sp}
% These macros boil down to |\subproblem@yx|, which is defined later.
%    \begin{macrocode}
\newcommand\subproblem{\subproblemx{}}
\newcommand\subproblemx[1]{\stepcounter{jeolmsubproblem}%
    \subproblemyx{\subproblem@numbering{jeolmsubproblem}}{#1}}
\newcommand\subproblemy[1]{\subproblemyx{#1}{}}
\newcommand\subproblemyx[2]{%
    \subproblem@yx{#1}{#2}%
    \ifmmode\subproblem@space@math\else\subproblem@space\fi}
\let\sp\subproblem
\let\spx\subproblemx
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \subsubsection{Numbering}
%
% \begin{macro}{\setproblem}
% \begin{macro}{\resetproblem}
% Underlying counter for |\problem| and friends.
%    \begin{macrocode}
\newcounter{jeolmproblem}
\newcommand\setproblem[1]{\setcounter{jeolmproblem}{#1}}
\newcommand\resetproblem{\setcounter{jeolmproblem}{0}}
\newcommand\problem@numbering{\arabic}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\resetsubproblem}
% Underlying counter for |\subproblem| and friends.
%    \begin{macrocode}
\newcounter{jeolmsubproblem}
\newcommand\resetsubproblem{\setcounter{jeolmsubproblem}{0}}
\newcommand\subproblem@numbering{\alph}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\problem@yx}
% This macro boils down to |\problem@label| and |\problem@format|,
% which are defined later.
% The former allows |\label| to be used to reference the problem, while the
% latter produces the visible output.
%    \begin{macrocode}
\newcommand\problem@yx[2]{%
    \problem@label{#1}\resetsubproblem
    \problem@format{#1}{#2}}
%    \end{macrocode}
% In items of |problem| environment, counter increment and labeling is
% managed by |\item| command itself.
%    \begin{macrocode}
\newcommand\problem@in@item{\problemx@in@item{}}
\newcommand\problemx@in@item[1]{\problem@yx{\problem@numbering{jeolmproblem}}{#1}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\subproblem@yx}
% This macro boils down to |\subproblem@label| and |\subproblem@format|,
% which are defined later.
% The former allows |\label| to be used to reference the subproblem, while the
% latter produces the visible output.
%    \begin{macrocode}
\newcommand\subproblem@yx[2]{\subproblem@label{#1}\subproblem@format{#1}{#2}}
%    \end{macrocode}
% \end{macro}
%
% \subsubsection{Labeling}
%
% \begin{macro}{\problem@label}
% Manage labeling by directly setting |\@currentlabel|.
%    \begin{macrocode}
\newcommand\theproblem{}
\newcommand\problem@label[1]{%
    \global\edef\theproblem{#1}%
    \edef\@currentlabel{\theproblem}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\subproblem@label}
% Label of subproblem will include the number of problem.
%    \begin{macrocode}
\newcommand\thesubproblem{}
\newcommand\subproblem@label[1]{%
    \global\edef\thesubproblem{{\theproblem}#1}%
    \edef\@currentlabel{\thesubproblem}}
%    \end{macrocode}
% \end{macro}
%
% \subsubsection{Formatting}
%
% \begin{macro}{\problem@format}
% \begin{macro}{\problem@space}
%    \begin{macrocode}
\newlength\problem@space@length
\problem@space@length=1em
\newcommand\problem@space{\hspace{\problem@space@length}\ignorespaces}
\newcommand\problem@format[2]{\begingroup\bfseries
    #1.\rlap{\!#2}%
\endgroup}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\subproblem@format}
% \begin{macro}{\subproblem@space}
%    \begin{macrocode}
\newlength\subproblem@space@length
\newlength\@subproblem@letter@width
\subproblem@space@length=0.5em
\newcommand\subproblem@space{\hspace{\subproblem@space@length}\ignorespaces}
\newcommand\subproblem@space@math{\mspace{20mu}}
\newcommand\subproblem@format[2]{\text{\begingroup\bfseries
\settowidth{\@subproblem@letter@width}{m}%
(%
    \hspace{0.5\@subproblem@letter@width}%
    \clap{#1\rlap{#2}}%
    \hspace{0.5\@subproblem@letter@width}%
    \phantom{#2}%
)%
\endgroup}}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{environment}{problems}
% Environment |problems| is a |list| with counter set to |jeolmproblem|,
% along with some formatting tuning.
%    \begin{macrocode}
\newenvironment{problems}{%
%    \end{macrocode}
% Macros |\itemx|, |\itemy| and |\itemyx| are defined only inside the
% environment.
%    \begin{macrocode}
\let\itemx\problem@itemx
\let\itemy\problem@itemy
\let\itemyx\problem@itemyx
%    \end{macrocode}
% Macro |\problem@in@item@current| can be redefined on the fly.
% This is used by |\itemx|.
%    \begin{macrocode}
\begin{list}{\problem@in@item@current}{%
\leftmargin=2.45em\labelsep=\problem@space@length%
\@nmbrlisttrue\def\@listctr{jeolmproblem}}%
}{\end{list}}
%    \end{macrocode}
% \end{environment}
%
%    \begin{macrocode}
\let\problem@in@item@current\problem@in@item
\newcommand\problem@itemx[1]{%
\def\problem@in@item@current{\problemx@in@item{#1}}%
\item%
\let\problem@in@item@current\problem@in@item}
\newcommand\problem@itemy[1]{%
\item[\problem@format{#1}{}]\problem@label{#1}\resetsubproblem}
\newcommand\problem@itemyx[2]{%
\item[\problem@format{#1}{#2}]\problem@label{#1}\resetsubproblem}
%    \end{macrocode}
%
% \subsection{Statements}
%
% \begin{macro}{\claim}
%    \begin{macrocode}
\newcommand\claim[1]{\claim@format{#1}}
\newcommand\claim@format[1]{\noindent\textbf{#1.\enspace}\ignorespaces}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\theorem}
% \begin{macro}{\theoremof}
%    \begin{macrocode}
\newcommand\theorem{\claim{Теорема}}
\newcommand\theoremof[1]{\claim{Теорема #1}}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\definition}
% \begin{macro}{\lemma}
% \begin{macro}{\statement}
%    \begin{macrocode}
\newcommand\definition{\claim{Определение}}
\newcommand\lemma{\claim{Лемма}}
\newcommand\statement{\claim{Утверждение}}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
%    \begin{macrocode}
%</package>
%    \end{macrocode}
%
% \Finale
%
\endinput
